// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MinVoiCe.data;

namespace MinVoiCe.Migrations
{
    [DbContext(typeof(MinvoiceDbContext))]
    [Migration("20190219044959_InvoicesAdded")]
    partial class InvoicesAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MinVoiCe.Models.Client", b =>
                {
                    b.Property<int>("ClientID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressCityZip");

                    b.Property<string>("AddressStreet");

                    b.Property<string>("EMail");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.Property<string>("PointOfContact");

                    b.HasKey("ClientID");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("MinVoiCe.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CurrentDate");

                    b.Property<int>("ProjectID");

                    b.Property<double>("TotalAmount");

                    b.HasKey("InvoiceID");

                    b.HasIndex("ProjectID");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("MinVoiCe.Models.Project", b =>
                {
                    b.Property<int>("ProjectID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientID");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<float>("Rate");

                    b.HasKey("ProjectID");

                    b.HasIndex("ClientID");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("MinVoiCe.Models.Worktime", b =>
                {
                    b.Property<int>("WorktimeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Amount");

                    b.Property<string>("Description");

                    b.Property<double>("Hours");

                    b.Property<bool>("IncludeInNextInvoice");

                    b.Property<int?>("InvoiceID");

                    b.Property<int>("ProjectID");

                    b.Property<string>("WeekRange");

                    b.HasKey("WorktimeID");

                    b.HasIndex("InvoiceID");

                    b.HasIndex("ProjectID");

                    b.ToTable("Worktimes");
                });

            modelBuilder.Entity("MinVoiCe.Models.Invoice", b =>
                {
                    b.HasOne("MinVoiCe.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MinVoiCe.Models.Project", b =>
                {
                    b.HasOne("MinVoiCe.Models.Client", "Client")
                        .WithMany("Projects")
                        .HasForeignKey("ClientID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MinVoiCe.Models.Worktime", b =>
                {
                    b.HasOne("MinVoiCe.Models.Invoice")
                        .WithMany("Worktimes")
                        .HasForeignKey("InvoiceID");

                    b.HasOne("MinVoiCe.Models.Project", "Project")
                        .WithMany("Worktimes")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
